#!/bin/bash

# ==============================================================================
# Jenkins Mass Node Reconnection Script
# ==============================================================================
#
# DESCRIPTION:
#   Automatically reconnects offline Jenkins slave nodes by extracting JNLP
#   secrets from Jenkins master and installing agents on remote nodes via SSH.
#   Processes all nodes discovered in the node_ip_mapping.txt file.
#
# USAGE:
#   ./mass_reconnect_nodes.sh
#
# PREREQUISITES:
#   1. Jenkins master running at http://10.96.227.206:8080
#   2. Valid Jenkins API credentials (fosqa/110dec...)
#   3. SSH access to all nodes with fosqa/ftnt123! credentials
#   4. node_ip_mapping.txt file (generated by scan_nodes.sh)
#   5. install_jenkins_agent.py script available on remote nodes
#
# PROCESS:
#   For each offline node:
#   1. Check if node is offline via Jenkins API
#   2. Extract JNLP secret from Jenkins master
#   3. SSH to remote node and run agent installer
#   4. Verify installation success
#
# AUTHOR:
#   GitHub Copilot & Fosqa Team
#
# VERSION:
#   2.0 - Enhanced with network scanning integration
# ==============================================================================

# Jenkins configuration
JENKINS_ADMIN_USER="fosqa"
JENKINS_API_TOKEN="110dec5c2d2974a67968074deafccc1414"
JENKINS_URL="http://10.96.227.206:8080"

# Remote node SSH credentials
NODE_USER="fosqa"
NODE_PASSWORD="ftnt123!"

# Script location on remote nodes
INSTALLER_SCRIPT="/home/fosqa/resources/tools/install_jenkins_agent.py"

echo "=== Jenkins Mass Node Reconnection Script v2.0 ==="
echo "Jenkins Master: $JENKINS_URL"
echo "Target nodes: From node_ip_mapping.txt"
echo ""

# Check prerequisites
if [ ! -f "node_ip_mapping.txt" ]; then
    echo "‚ùå Error: node_ip_mapping.txt not found!"
    echo "   Please run scan_nodes.sh first to discover nodes."
    exit 1
fi

# Function to get node IP from the mapping file
get_node_ip() {
    local node_name=$1

    # Read IP from the mapping file
    local ip=$(grep "^$node_name:" ../node_ip_mapping.txt | cut -d: -f2)

    if [ -n "$ip" ]; then
        echo "$ip"
    else
        echo ""
    fi
}

# Read all nodes from mapping file
mapfile -t node_entries < <(cat ../node_ip_mapping.txt)
total_nodes=${#node_entries[@]}

echo "=== Processing $total_nodes nodes for reconnection ==="
echo ""

successful_reconnections=0
failed_reconnections=0
already_online=0

# Process each node
for i in "${!node_entries[@]}"; do
    node_entry="${node_entries[$i]}"
    node_name=$(echo "$node_entry" | cut -d: -f1)
    node_ip=$(echo "$node_entry" | cut -d: -f2)

    current=$((i + 1))
    echo "=== Processing node $current/$total_nodes: $node_name ==="

    # Check if node exists and is offline in Jenkins
    echo "  Checking Jenkins status for $node_name..."
    node_status=$(curl -s -u "$JENKINS_ADMIN_USER:$JENKINS_API_TOKEN" \
        "$JENKINS_URL/computer/$node_name/api/json" | jq -r '.offline' 2>/dev/null)

    if [ "$node_status" = "true" ]; then
        echo "  üî¥ Node $node_name is offline, attempting reconnection..."

        # Get JNLP secret from Jenkins
        echo "  Getting JNLP secret for $node_name..."
        jnlp_response=$(curl -s -u "$JENKINS_ADMIN_USER:$JENKINS_API_TOKEN" \
            "$JENKINS_URL/computer/$node_name/slave-agent.jnlp")

        # Extract secret from JNLP response
        secret=$(echo "$jnlp_response" | grep -o '<argument>[^<]*</argument>' | sed -n '1p' | sed 's/<[^>]*>//g')

        if [ -n "$secret" ] && [ "$secret" != "$node_name" ]; then
            secret_preview="${secret:0:10}..."
            echo "  JNLP secret found: $secret_preview"
            echo "  Node IP: $node_ip"
            echo "  Reinstalling agent on $node_name ($node_ip)..."

            # Build remote installation command
            remote_cmd="sudo python3 $INSTALLER_SCRIPT --cleanup --jenkins-url $JENKINS_URL --jenkins-secret $secret --jenkins-agent-name $node_name --remote-root /home/jenkins/agent --password jenkins"

            # Execute installation on remote node
            sshpass -p "$NODE_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
                "$NODE_USER@$node_ip" "$remote_cmd"

            if [ $? -eq 0 ]; then
                echo "  ‚úÖ Agent installation completed for $node_name"
                ((successful_reconnections++))
            else
                echo "  ‚ùå Agent installation failed for $node_name"
                ((failed_reconnections++))
            fi
        else
            echo "  ‚ùå Could not extract JNLP secret for $node_name"
            ((failed_reconnections++))
        fi
    elif [ "$node_status" = "false" ]; then
        echo "  ‚úÖ Node $node_name is already online"
        ((already_online++))
    else
        echo "  ‚ùì Could not determine status for $node_name (may not exist in Jenkins)"
        ((failed_reconnections++))
    fi

    echo "  Waiting 3 seconds before next node..."
    echo ""
    sleep 3
done

echo "=== Mass Reconnection Summary ==="
echo "Total nodes processed: $total_nodes"
echo "‚úÖ Successful reconnections: $successful_reconnections"
echo "üî¥ Failed reconnections: $failed_reconnections"
echo "üü¢ Already online: $already_online"
echo ""

if [ $successful_reconnections -gt 0 ]; then
    echo "üéâ Successfully reconnected $successful_reconnections nodes!"
    echo "   Check Jenkins master at $JENKINS_URL to verify connections."
fi

if [ $failed_reconnections -gt 0 ]; then
    echo "‚ö†Ô∏è  $failed_reconnections nodes failed to reconnect."
    echo "   Check SSH connectivity and Jenkins configuration."
fi

echo ""
echo "=== Script completed ==="
